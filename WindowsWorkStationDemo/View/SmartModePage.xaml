<Page x:Class="WindowsWorkStationDemo.View.SmartModePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WindowsWorkStationDemo"
      xmlns:models="clr-namespace:WindowsWorkStationDemo.Model"
      xmlns:ie="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="SmartModePage"
      DataContext="{Binding BrowseViewObject,Source={StaticResource Locator}}">

    <Page.Resources>
        <!-- item template about how to show the BrowseViewObject in listBox -->
        <DataTemplate x:Key="ListItemTemplate" DataType="{x:Type models:BrowseViewObject}">
            <DockPanel>
                <TextBlock Text="{Binding Path=Icon}" FontFamily="Segoe MDL2 Assets" Margin="10,0,10,0"/>
                <TextBlock Text="{Binding Path=Title}" Margin="0,0,10,0"/>
                <Button DockPanel.Dock="Right" Content="+" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0"
                                    Visibility="{Binding Path=Visibility}" Command="{Binding Path=AddObject}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
                            <!--<Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Visibility}" Value="Collapsed">
                                    <Setter Property="Command" Value="" />
                                </DataTrigger>
                            </Style.Triggers>-->
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Fill="Red" />
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </DockPanel>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <Border Style="{StaticResource SeparatorBorderStyle}" Grid.Row="0">
            <DockPanel LastChildFill="True">
                <!-- Enterprises panel -->
                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="{DynamicResource ENTERPRISES}" Style="{StaticResource SideBarTitleStyle}" Margin="10, 10, 0, 0"/>
                    <ListBox Margin="0,10,0,10" Name="EnterpriseListBox" ItemsSource="{Binding EnterpriseBrowseViewObjects}"
                             ItemTemplate="{StaticResource ListItemTemplate}" BorderThickness="0">
                        <!-- binding the event command with selection changed, avoid the code in background class -->
                        <ie:Interaction.Triggers>
                            <ie:EventTrigger EventName="SelectionChanged">
                                <ie:InvokeCommandAction Command="{Binding SelectedViewObjectCommand}" CommandParameter="{Binding ElementName=EnterpriseListBox,Path=SelectedItem}" />
                            </ie:EventTrigger>
                        </ie:Interaction.Triggers>
                    </ListBox>
                </StackPanel>
                <Separator DockPanel.Dock="Top" />
                <!-- Documents panel -->
                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="{DynamicResource DOCUMENTS}" Style="{StaticResource SideBarTitleStyle}" Margin="10, 10, 0, 0"/>
                    <ListBox Margin="0,10,0,10" Name="DocumentsListBox" ItemsSource="{Binding DocumentsBrowseViewObjects}"
                             ItemTemplate="{StaticResource ListItemTemplate}" BorderThickness="0">
                        <!-- binding the event command with selection changed, avoid the code in background class -->
                        <ie:Interaction.Triggers>
                            <ie:EventTrigger EventName="SelectionChanged">
                                <ie:InvokeCommandAction Command="{Binding SelectedViewObjectCommand}" CommandParameter="{Binding ElementName=DocumentsListBox,Path=SelectedItem}" />
                            </ie:EventTrigger>
                        </ie:Interaction.Triggers>
                    </ListBox>
                </StackPanel>
            </DockPanel>
        </Border>
    </Grid>
</Page>
