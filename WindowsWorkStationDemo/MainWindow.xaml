<Window x:Class="WindowsWorkStationDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WindowsWorkStationDemo"
        xmlns:src="clr-namespace:WindowsWorkStationDemo;assembly=WindowsWorkStationDemo"
        mc:Ignorable="d"
        Height="640" Width="732" MinWidth="732" MinHeight="300"
        DataContext="{Binding MainWindowsUIStatus,Source={StaticResource Locator}}"
        Title="{Binding Title}" >
    <Window.Resources>
        <Style TargetType="ButtonBase" x:Key="IconFontStyle">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
            <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        </Style>
        <Style TargetType="Button" x:Key="IconFontButtonStyle" BasedOn="{StaticResource IconFontStyle}" />
        <Style TargetType="ToggleButton" x:Key="IconFontToggleButtonStyle" BasedOn="{StaticResource IconFontStyle}" />
        <Style TargetType="{x:Type ComboBoxItem}" x:Key="ComboBoxItemCheckBoxStyle" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <DockPanel LastChildFill="True">
                            <CheckBox Margin="5,0,5,0" BorderThickness="0" DockPanel.Dock="Left" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=IsSelected}"/>
                            <TextBlock DockPanel.Dock="Left" Text="{Binding Converter={StaticResource EnumToStringConverter}}" HorizontalAlignment="Right"
                                       Foreground="{Binding ForegroundColor}"/>
                            <TextBlock />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Converter={StaticResource EnumToStringConverter}}" Value="-">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Separator HorizontalAlignment="Stretch" IsEnabled="False" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem Header="File">
                <MenuItem Header="New">
                    <MenuItem Header="Dashboard" Click="new_dashboard" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit" Click="Exit_Application"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="todo" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="todo" />
            </MenuItem>
            <MenuItem Header="Go">
                <MenuItem Header="todo" />
            </MenuItem>
            <MenuItem Header="Window">
                <MenuItem Header="todo" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="todo" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- top tool bar-->
            <Grid Grid.Row="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Go ahead and back button -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,10,10,10">
                    <Button Content="&#xE016;" Style="{StaticResource IconFontStyle}" Margin="0" Command="{Binding GoBack}"/>
                    <Button Content="&#xE017;" Style="{StaticResource IconFontStyle}" Margin="0" Command="{Binding GoForward}"/>
                </StackPanel>

                <!-- view tool bar -->
                <StackPanel Grid.Column="1" Orientation="Horizontal"  Margin="10,10,0,10">
                    <ListBox HorizontalAlignment="Left" ItemsSource="{Binding ViewStyleList}" Margin="0" Padding="-1" BorderThickness="0" SelectionMode="Single" SelectedIndex="{Binding BrowseViewStyle}" IsSynchronizedWithCurrentItem="True">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="-1" />
                                <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Orientation="Horizontal" Margin="0"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}, Path=Height}" Content="{Binding}" Style="{StaticResource IconFontStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Padding="-1"
                                                  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="10,0,10,0">
                        <Grid>
                            <ComboBox Width="160" x:Name="arrangeByComboxBox" ItemsSource="{Binding ArrangeByList}" HorizontalContentAlignment="Right" 
                                      Foreground="{DynamicResource DynamicBackgroundColor}"
                                      ItemContainerStyle="{StaticResource ComboBoxItemCheckBoxStyle}"
                                      SelectedItem="{Binding KindOfArrangeBy}">
                            </ComboBox>
                            <StackPanel Margin="5" Orientation="Horizontal">
                                <TextBlock Text="Arrange By: " IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Foreground="DarkGray" />
                                <TextBlock x:Name="SelectedArrangeByText" Text="{Binding KindOfArrangeBy, Converter={StaticResource EnumToStringConverter}}" IsHitTestVisible="False" HorizontalAlignment="Left" Margin="0">
                                </TextBlock>
                            </StackPanel>
                        </Grid>

                        <Grid>
                            <ComboBox Width="140" x:Name="sortByComboxBox" ItemsSource="{Binding SortByList}" 
                                      Foreground="{DynamicResource DynamicBackgroundColor}"
                                      ItemContainerStyle="{StaticResource ComboBoxItemCheckBoxStyle}"
                                      SelectedItem="{Binding KindOfSortBy}">
                            </ComboBox>
                            <StackPanel Margin="5" Orientation="Horizontal">
                                <TextBlock Text="Sort By: " IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Foreground="DarkGray" />
                                <TextBlock Text="{Binding KindOfSortBy,Converter={StaticResource EnumToStringConverter}}" IsHitTestVisible="False" Margin="0">
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </StackPanel>

                <!-- search box -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                    <Grid>
                        <TextBox x:Name="SearchTermTextBox" Width="200" Margin="0,10,0,10" />
                        <TextBlock IsHitTestVisible="False" Text="Search" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" Foreground="DarkGray" >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Button Content="&#xE1A3;" Style="{StaticResource IconFontStyle}" Margin="0,10,0,10"/>
                </StackPanel>
            </Grid>

            <!-- left function panel -->
            <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource SeparatorBorderStyle}">
                <TabControl VerticalAlignment="Stretch" HorizontalAlignment="Center" TabStripPlacement="Bottom" SelectedIndex="{Binding KindOfViewMode}">
                    <TabItem Header="&#xE14C;" FontFamily="Segoe MDL2 Assets">
                        <Frame x:Name="sideBarFrame" Source="View/SmartModePage.xaml"/>
                    </TabItem>
                    <TabItem Header="&#xE12F;" FontFamily="Segoe MDL2 Assets">
                        <Frame x:Name="objectTreeBarFrame" Source="View/ObjectsTreePage.xaml"/>
                    </TabItem>
                </TabControl>
            </Border>

            <!-- right browsing panel -->
            <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource SeparatorBorderStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Frame Name="browsingFrame" NavigationUIVisibility="Hidden" Content="{Binding Path=BrowsingPage, Mode=TwoWay}"/>
                    <StackPanel x:Name="pathBar" Grid.Row="1" Visibility="Hidden" Orientation="Horizontal"/>
                </Grid>
            </Border>

            <!-- bottom status panel -->
            <Border Name="StatusBorder" Grid.Row="2" Grid.ColumnSpan="2">
                <TextBlock Name="statusBar" Text="{Binding StatusMessage}" HorizontalAlignment="Center"/>
                <Border.Style>
                    <Style TargetType="{x:Type Border}" BasedOn="{StaticResource SeparatorBorderStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding StatusMessage}" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </Grid>

</Window>
